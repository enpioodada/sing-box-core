name: Update sing-box
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/update-clashdashboard.yml"

jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      go_version: ${{ steps.go.outputs.version }}
    steps:
      - name: Get `Go` latest version
        id: go
        run: |
          echo "version=$(curl -sSL https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | jq -r '.[0].version')" >> $GITHUB_OUTPUT

  puernya:
    runs-on: ubuntu-latest
    needs: go
    outputs:
      puernya_version: ${{ steps.puernya.outputs.puernya_version }}
      puernya_time: ${{ steps.puernya.outputs.puernya_time }}
      puernya_tags: ${{ steps.puernya.outputs.puernya_tags }}
      puernya_skip_update: ${{ steps.compare.outputs.skip_update }}
    steps:
      - name: Checkout `building`
        uses: actions/checkout@v5
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 0

      - name: Setup `Go`
        uses: actions/setup-go@v6
        with:
          go-version: ${{ needs.go.outputs.go_version }}

      - name: Get `sing-box PuerNya` version
        id: puernya
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          puernya_version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          ver_commit=$(echo "${puernya_version}" | awk -F '-' '{print $3}')
          puernya_time=$(git log -1 --format=%cd --date=format:'%Y-%m-%d' "$ver_commit")
          echo "puernya_version=$puernya_version" >> $GITHUB_OUTPUT
          echo "puernya_time=$puernya_time" >> $GITHUB_OUTPUT
          echo "puernya_tags=with_quic,with_dhcp,with_wireguard,with_shadowsocksr,with_ech,with_utls,with_clash_api,with_gvisor" >> $GITHUB_OUTPUT

      - name: Compare `sing-box PuerNya` versions with current release
        id: compare
        run: |
          current_body=$(curl -sSL "https://api.github.com/repos/${{ github.repository }}/releases/tags/sing-box" | jq -r '.body // ""')
          if echo "$current_body" | grep -q "${{ steps.puernya.outputs.puernya_version }}.*${{ steps.puernya.outputs.puernya_time }}"; then
            echo "当前 sing-box PuerNya 版本已是最新版本 ${{ steps.puernya.outputs.puernya_version }}，无需更新"
            skip_update=true
          else
            echo "当前 sing-box PuerNya 版本较低，需要更新最新版本至 ${{ steps.puernya.outputs.puernya_version }}"
            skip_update=false
          fi
          echo "skip_update=$skip_update" >> $GITHUB_OUTPUT

  puernya_cross:
    runs-on: ubuntu-latest
    if: ${{ needs.puernya.outputs.puernya_skip_update != 'true' }}
    strategy:
      matrix:
        include:
          # linux
          - { name: linux-amd64, goos: linux, goarch: amd64, goamd64: v1 }
          - { name: linux-armv7, goos: linux, goarch: arm, goarm: 7 }
          - { name: linux-arm64, goos: linux, goarch: arm64 }
          # windows
          - { name: windows-amd64, goos: windows, goarch: amd64, goamd64: v1 }
          - { name: windows-arm64, goos: windows, goarch: arm64 }

      fail-fast: false
    needs:
      - go
      - puernya
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      puernya_VERSION: ${{ needs.puernya.outputs.puernya_version }}
      puernya_TAGS: ${{ needs.puernya.outputs.puernya_tags }}
    steps:
      - name: Checkout `building`
        uses: actions/checkout@v5
        with:
          repository: PuerNya/sing-box
          ref: building

      - name: Fix sniff
        run: sed -i 's/sniffHosts/sniffHost/' ./experimental/clashapi/trafficontrol/tracker.go

      - name: Setup `Go`
        uses: actions/setup-go@v6
        with:
          go-version: ${{ needs.go.outputs.go_version }}

      - name: Build `sing-box PuerNya` core
        id: build
        run: go build -v -trimpath -ldflags "-checklinkname=0 -X 'github.com/sagernet/sing-box/constant.Version=${puernya_VERSION}' -s -w -buildid=" -tags "${puernya_TAGS}" ./cmd/sing-box

      - name: Upload files to workspace
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-puernya-${{ matrix.name }}
          path: sing-box*

  push_sing-box:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - puernya
      - puernya_cross
    env:
      puernya_VERSION: ${{ needs.puernya.outputs.puernya_version }}
      puernya_TIME: ${{ needs.puernya.outputs.puernya_time }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v5

      - name: Download files from workspace
        uses: actions/download-artifact@v5
        with:
          path: ./tmp-puernya/

      - name: Move files and zip `sing-box PuerNya` cores by `tar`
        if: ${{ needs.puernya.outputs.puernya_skip_update != 'true' }}
        run: |
          # Linux
          mkdir -p ./tmp-puernya/ ./sing-box/
          archs=(amd64 armv7 arm64)
          for arch in "${archs[@]}"; do
            mv -f "./tmp-puernya/sing-box-puernya-linux-${arch}/sing-box" ./tmp-puernya/sing-box
            chmod +x ./tmp-puernya/sing-box
            tar --no-same-owner -czf "./sing-box/sing-box-puernya-linux-${arch}.tar.gz" -C ./tmp-puernya/ sing-box
          done

          # Windows
          mv -f ./tmp-puernya/sing-box-puernya-windows-amd64/sing-box.exe ./sing-box/sing-box-puernya-windows-amd64.exe
          mv -f ./tmp-puernya/sing-box-puernya-windows-arm64/sing-box.exe ./sing-box/sing-box-puernya-windows-arm64.exe
          rm -rf ./tmp-puernya*

      - name: Set variables
        run: |
          echo "DOWNLOAD_URL=https://github.com/SagerNet/sing-box/releases/download" >> ${GITHUB_ENV}
          echo "RELEASE_VERSION=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r '.tag_name')" >> ${GITHUB_ENV}
          echo "RELEASE_TIME=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r '.created_at' | xargs -I {} date -d '{} +8 hours' '+%Y-%m-%d')" >> ${GITHUB_ENV}
          echo "DEV_VERSION=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '[.[] | select(.tag_name | test("alpha|beta|rc"))][0].tag_name')" >> ${GITHUB_ENV}
          echo "DEV_TIME=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '[.[] | select(.tag_name | test("alpha|beta|rc"))][0].created_at' | xargs -I {} date -d '{} +8 hours' '+%Y-%m-%d')" >> ${GITHUB_ENV}
        shell: bash

      - name: Compare `sing-box` versions with current release
        run: |
          current_body=$(curl -sSL "https://api.github.com/repos/${{ github.repository }}/releases/tags/sing-box" | jq -r '.body // ""')
          archs=(
            "sing-box Release|${RELEASE_VERSION}|${RELEASE_TIME}"
            "sing-box Dev|${DEV_VERSION}|${DEV_TIME}"
          )
          for arch in "${archs[@]}"; do
            IFS="|" read -r name version time <<< "$arch"
            var_name="${name//[ -]/_}_skip_update"
            if echo "${current_body}" | grep -q "${name}.*${version}.*${time}"; then
              echo "当前 ${name} 版本已是最新版本 ${version}，无需更新"
              eval "${var_name}=true"
            else
              echo "当前 ${name} 版本较低，需要更新最新版本至 ${version}"
              eval "${var_name}=false"
            fi
            eval "value=\$${var_name}"
            echo "${var_name}=${value}" >> ${GITHUB_ENV}
          done

      - name: Download `sing-box Release` files
        if: ${{ env.sing_box_Release_skip_update != 'true' }}
        run: |
          mkdir -p ./sing-box/
          archs=(amd64 armv7 arm64)
          for arch in "${archs[@]}"; do
            mkdir -p "./tmp-release/release_linux_${arch}"
            curl -L "${DOWNLOAD_URL}/${RELEASE_VERSION}/sing-box-${RELEASE_VERSION#v}-linux-${arch}.tar.gz" | tar -zx -C "./tmp-release/release_linux_${arch}/"
            mv -f "./tmp-release/release_linux_${arch}/sing-box-${RELEASE_VERSION#v}-linux-${arch}/sing-box" ./tmp-release/sing-box
            chmod +x ./tmp-release/sing-box
            tar --no-same-owner -czf "./sing-box/sing-box-release-linux-${arch}.tar.gz" -C ./tmp-release/ sing-box
          done

          archs=(amd64 arm64)
          for arch in "${archs[@]}"; do
            mkdir -p "./tmp-release/release_windows_${arch}"
            wget -P "./tmp-release/release_windows_${arch}/" "${DOWNLOAD_URL}/${RELEASE_VERSION}/sing-box-${RELEASE_VERSION#v}-windows-${arch}.zip"
            unzip -o "./tmp-release/release_windows_${arch}/sing-box-${RELEASE_VERSION#v}-windows-${arch}.zip" -d "./tmp-release/release_windows_${arch}/"
            mv -f "./tmp-release/release_windows_${arch}/sing-box-${RELEASE_VERSION#v}-windows-${arch}/sing-box.exe" "./sing-box/sing-box-release-windows-${arch}.exe"
          done
          rm -rf ./tmp-release*

      - name: Download `sing-box Dev` files
        if: ${{ env.sing_box_Dev_skip_update != 'true' }}
        run: |
          mkdir -p ./sing-box/
          archs=(amd64 armv7 arm64)
          for arch in "${archs[@]}"; do
            mkdir -p "./tmp-dev/dev_linux_${arch}"
            curl -L "${DOWNLOAD_URL}/${DEV_VERSION}/sing-box-${DEV_VERSION#v}-linux-${arch}.tar.gz" | tar -zx -C "./tmp-dev/dev_linux_${arch}/"
            mv -f "./tmp-dev/dev_linux_${arch}/sing-box-${DEV_VERSION#v}-linux-${arch}/sing-box" ./tmp-dev/sing-box
            chmod +x ./tmp-dev/sing-box
            tar --no-same-owner -czf "./sing-box/sing-box-dev-linux-${arch}.tar.gz" -C ./tmp-dev/ sing-box
          done

          archs=(amd64 arm64)
          for arch in "${archs[@]}"; do
            mkdir -p "./tmp-dev/dev_windows_${arch}"
            wget -P "./tmp-dev/dev_windows_${arch}/" "${DOWNLOAD_URL}/${DEV_VERSION}/sing-box-${DEV_VERSION#v}-windows-${arch}.zip"
            unzip -o "./tmp-dev/dev_windows_${arch}/sing-box-${DEV_VERSION#v}-windows-${arch}.zip" -d "./tmp-dev/dev_windows_${arch}/"
            mv -f "./tmp-dev/dev_windows_${arch}/sing-box-${DEV_VERSION#v}-windows-${arch}/sing-box.exe" "./sing-box/sing-box-dev-windows-${arch}.exe"
          done
          rm -rf ./tmp-dev*

      - name: Check if `sing-box` files exist
        id: check
        run: |
          if ls ./sing-box/* >/dev/null 2>&1; then
            echo "sing-box 文件夹内存在新内核文件，需要上传"
            echo "singbox_exist=true" >> $GITHUB_OUTPUT
          else
            echo "sing-box 文件夹内没有新内核文件，无需上传"
            echo "singbox_exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Release and upload `sing-box` assets
        if: ${{ steps.check.outputs.singbox_exist == 'true' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: sing-box
          tag: sing-box
          overwrite: true
          body: |
            # 📝 Release Notes 
            1. 更新 [sing-box Release 版](https://github.com/SagerNet/sing-box/tree/main) 至 ${{ env.RELEASE_VERSION }}，发布于 ${{ env.RELEASE_TIME }} <br/>
            2. 更新 [sing-box Dev 版](https://github.com/SagerNet/sing-box/tree/dev) 至 ${{ env.DEV_VERSION }}，发布于 ${{ env.DEV_TIME }} <br/>
            3. 更新 [sing-box PuerNya 版](https://github.com/PuerNya/sing-box/tree/building) 至 v${{ env.puernya_VERSION }}，发布于 ${{ env.puernya_TIME }}
          file_glob: true
          file: ./sing-box/*

  update_readme:
    runs-on: ubuntu-latest
    steps:
      - name: Update README
        uses: mnjirjak/github-update-readme@v1.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          puernya_VERSION: ${{ needs.puernya.outputs.puernya_version }}
          release_VERSION: ${{ env.RELEASE_VERSION }}
          dev_VERSION: ${{ env.DEV_VERSION }}
        with:
          header: "Sing-Box核心编译"
          repoCount: "0"
          subhead: |
            ## sing-box 内核 PuerNya 版

            ```
            curl -L https://github.com/enpioodada/sing-box-core/releases/download/sing-box/sing-box-puernya-linux-amd64.tar.gz | tar -zx -C /usr/local/bin
            ```

            ## Changelog <br/>

            1. 更新 [sing-box Release 版](https://github.com/SagerNet/sing-box/tree/main) 至 ${{ env.RELEASE_VERSION }}，发布于 ${{ env.RELEASE_TIME }} <br/>
            2. 更新 [sing-box Dev 版](https://github.com/SagerNet/sing-box/tree/dev) 至 ${{ env.DEV_VERSION }}，发布于 ${{ env.DEV_TIME }} <br/>
            3. 更新 [sing-box PuerNya 版](https://github.com/PuerNya/sing-box/tree/building) 至 v${{ env.puernya_VERSION }}，发布于 ${{ env.puernya_TIME }}
